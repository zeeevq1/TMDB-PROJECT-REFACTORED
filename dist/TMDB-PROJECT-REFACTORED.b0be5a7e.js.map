{"mappings":"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","sources":["<anon>","src/main.js"],"sourcesContent":["const apiKey = \"fcb5f9f40d9acdf7af2d8c38ded9bb12\";\nconst apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`;\nconst imageBaseUrl = \"https://image.tmdb.org/t/p/w500\";\nconst LS_KEY = \"favorites\"; // کلید ذخیره‌سازی\nfunction loadFavorites() {\n    try {\n        return JSON.parse(localStorage.getItem(LS_KEY)) || [];\n    } catch  {\n        return [];\n    }\n}\nfunction saveFavorites(favs) {\n    localStorage.setItem(LS_KEY, JSON.stringify(favs));\n}\nfunction isFav(id) {\n    const favs = loadFavorites();\n    return favs.some((m)=>m.id === id);\n}\nfunction toggleFav(movie) {\n    const favs = loadFavorites();\n    const idx = favs.findIndex((m)=>m.id === movie.id);\n    if (idx >= 0) favs.splice(idx, 1);\n    else favs.push({\n        id: movie.id,\n        title: movie.title,\n        poster_path: movie.poster_path,\n        vote_average: movie.vote_average,\n        release_date: movie.release_date\n    });\n    saveFavorites(favs);\n}\nasync function fetchMovies() {\n    try {\n        const res = await fetch(apiUrl);\n        const data = await res.json();\n        const movies = data.results;\n        displayMovies(data.results);\n        displayMovies(movies);\n        displayShows(movies);\n    } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n    }\n}\nfunction displayMovies(movies) {\n    const container = document.getElementById(\"movie-container\");\n    container.innerHTML = \"\";\n    movies.forEach((movie)=>{\n        const faved = isFav(movie.id);\n        const movieCard = document.createElement(\"div\");\n        movieCard.className = \"bg-white/60 backdrop-blur rounded-lg overflow-hidden shadow-md hover:scale-105 transition transform duration-300 text-gray-900\";\n        movieCard.innerHTML = `\n      <div class=\"relative\">\n        <img src=\"${imageBaseUrl}${movie.poster_path}\" alt=\"${movie.title}\" class=\"w-full h-auto\">\n        <button\n          class=\"fav-btn absolute top-2 right-2 rounded-full p-2 bg-white/80 hover:bg-white shadow\"\n          aria-label=\"favorite\"\n          data-id=\"${movie.id}\">\n          ${faved ? `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6 fill-pink-500\" viewBox=\"0 0 24 24\"><path d=\"M12 21s-6.716-4.35-9.428-7.062C.86 12.226.5 10.37 1.05 8.85 1.72 7.01 3.41 5.75 5.39 5.75c1.5 0 2.86.79 3.61 2.02.75-1.23 2.11-2.02 3.61-2.02 1.98 0 3.67 1.26 4.34 3.1.55 1.52.19 3.38-1.52 5.09C18.716 16.65 12 21 12 21z\"/></svg>` : `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6 stroke-pink-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path d=\"M20.84 4.61a5.5 5.5 0 00-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 10-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 000-7.78z\"/></svg>`}\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <h2 class=\"text-lg font-semibold\">${movie.title}</h2>\n        <p class=\"text-sm text-gray-600\">Rating: ${movie.vote_average}</p>\n      </div>\n    `;\n        movieCard.querySelector(\".fav-btn\").addEventListener(\"click\", (e)=>{\n            e.stopPropagation();\n            toggleFav(movie);\n            const btn = e.currentTarget;\n            const nowFav = isFav(movie.id);\n            btn.innerHTML = nowFav ? `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6 fill-pink-500\" viewBox=\"0 0 24 24\"><path d=\"M12 21s-6.716-4.35-9.428-7.062C.86 12.226.5 10.37 1.05 8.85 1.72 7.01 3.41 5.75 5.39 5.75c1.5 0 2.86.79 3.61 2.02.75-1.23 2.11-2.02 3.61-2.02 1.98 0 3.67 1.26 4.34 3.1.55 1.52.19 3.38-1.52 5.09C18.716 16.65 12 21 12 21z\"/></svg>` : `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6 stroke-pink-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path d=\"M20.84 4.61a5.5 5.5 0 00-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 10-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 000-7.78z\"/></svg>`;\n        });\n        movieCard.addEventListener(\"click\", (e)=>{\n            document.getElementById(\"popup\").classList.remove(\"hidden\");\n            e.preventDefault();\n            populatePopup(movie);\n        });\n        container.appendChild(movieCard);\n    });\n}\nfetchMovies();\n//DISPAY SHOWS FUNCTION\nfunction randomFilmArray(array) {\n    return array.sort(()=>Math.random() - 0.5).slice(0, 4);\n}\nfunction displayShows(movies) {\n    movies = randomFilmArray(movies);\n    const showContainer = document.getElementById(\"liveshows\");\n    showContainer.innerHTML = \"\";\n    movies.forEach((movie)=>{\n        const showCard = document.createElement(\"div\");\n        showCard.innerHTML = `\n        <a   href=\"\">\n              <img\n                class=\"w-full aspect-[16/24] bg-cover rounded-lg overflow-hidden mb-3  max-[910px]:w-[1000px] max-[910px]:bg-fit max-[910px]:h-[350px]\"\n                src=\"${imageBaseUrl}${movie.poster_path}\"\n                alt=\"${movie.title}\"\n              />\n              <a\n                href=\"#\"\n                class=\"text-[1.1rem] font-bold tracking-normal hover:text-blue-600 transition-colors\"\n              >\n                ${movie.title}\n              </a>\n              <p class=\"mt-2 text-[0.9rem]\">${movie.overview}</p>\n            </a>\n    `;\n        showCard.addEventListener(\"click\", (e)=>{\n            document.getElementById(\"popup\").classList.remove(\"hidden\");\n            e.preventDefault();\n            populatePopup(movie);\n        });\n        showContainer.appendChild(showCard);\n    });\n}\nconst popup = document.getElementById(\"popup\");\nconst closeBtn = document.getElementById(\"popupCloseBtn\");\ncloseBtn.addEventListener(\"click\", ()=>{\n    popup.classList.add(\"hidden\");\n});\n//POP UP FUNCTION\nfunction populatePopup(movie) {\n    currentMovieId = movie.id;\n    const titlePopUp = document.querySelector(\".info-container h1\");\n    titlePopUp.textContent = movie.title;\n    const year = movie.release_date;\n    const infoFilm = document.querySelector(\"#popup .info-film\");\n    infoFilm.innerHTML = `\n    <p class=\"bg-orange-400 rounded-md px-2 py-1\">Release Year: ${year}</p>\n  `;\n    const ratingValue = movie.vote_average ? movie.vote_average.toFixed(1) : \"N/A\";\n    document.querySelector(\"#popup .pop-container .flex.flex-col.items-center p.text-white span\").textContent = ratingValue;\n    const popularity = movie.popularity ? Math.round(movie.popularity) : \"N/A\";\n    document.querySelector(\"#popup .pop-container .flex.items-center.gap-2 p.text-gray-500 span\").textContent = popularity;\n    const imageElem = document.querySelector(\".img-popup\");\n    imageElem.src = imageBaseUrl + movie.poster_path;\n    imageElem.alt = movie.title;\n    document.querySelector(\".description\").textContent = movie.overview;\n    popup.classList.remove(\"hidden\");\n    loadReviewsForMovie(currentMovieId);\n}\n// REVIEWS\nconst reviewForm = document.getElementById(\"reviewForm\");\nconst reviewTextarea = document.getElementById(\"reviewTexareat\");\nconst reviewContainer = document.getElementById(\"reviewContainer\");\nlet currentMovieId = null;\nfunction getStorageKey(movieId) {\n    return `reviews_${movieId}`;\n}\nfunction loadReviewsForMovie(movieId) {\n    const reviews = JSON.parse(localStorage.getItem(getStorageKey(movieId))) || [];\n    reviewContainer.innerHTML = \"\";\n    reviews.forEach((review, index)=>{\n        const reviewDiv = document.createElement(\"div\");\n        reviewDiv.className = \"bg-gray-100 p-3 mb-2 rounded-md flex justify-between items-center\";\n        reviewDiv.innerHTML = `\n      <span class=\"text-gray-700\">${review}</span>\n      <button class=\"text-red-500 hover:text-red-700\" data-index=\"${index}\">\\u{274C}</button>\n    `;\n        reviewDiv.querySelector(\"button\").addEventListener(\"click\", ()=>{\n            deleteReviewForMovie(movieId, index);\n        });\n        reviewContainer.appendChild(reviewDiv);\n    });\n}\nreviewForm.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    const text = reviewTextarea.value.trim();\n    if (text && currentMovieId) {\n        const key = getStorageKey(currentMovieId);\n        const reviews = JSON.parse(localStorage.getItem(key)) || [];\n        reviews.push(text);\n        localStorage.setItem(key, JSON.stringify(reviews));\n        reviewTextarea.value = \"\";\n        loadReviewsForMovie(currentMovieId);\n    } else alert(\"Scrivi qualcosa prima di salvare!\");\n});\nfunction deleteReviewForMovie(movieId, index) {\n    const key = getStorageKey(movieId);\n    const reviews = JSON.parse(localStorage.getItem(key)) || [];\n    reviews.splice(index, 1);\n    localStorage.setItem(key, JSON.stringify(reviews));\n    loadReviewsForMovie(movieId);\n}\n// the following part from hua: This function is triggered when the \"Random Film\" button is clicked\ndocument.getElementById(\"random-film-btn\").onclick = async function() {\n    const apiKey = \"fcb5f9f40d9acdf7af2d8c38ded9bb12\"; // <-- Replace with your TMDB API key\n    const url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`;\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        const movies = data.results;\n        if (!movies || movies.length === 0) {\n            document.getElementById(\"film-result\").innerHTML = \"No movies found.\";\n            return;\n        }\n        const randomMovie = movies[Math.floor(Math.random() * movies.length)];\n        document.getElementById(\"film-result\").innerHTML = `\n      <div class=\"flex flex-col items-center\">\n        <img src=\"https://image.tmdb.org/t/p/w300${randomMovie.poster_path}\" alt=\"${randomMovie.title}\" class=\"mb-4 rounded shadow-lg\" />\n        <h2 class=\"text-2xl font-bold mb-2\">${randomMovie.title}</h2>\n        <p class=\"text-gray-700 mb-2\">${randomMovie.release_date}</p>\n        <p class=\"text-gray-600 max-w-md\">${randomMovie.overview}</p>\n        <button id=\"write-thoughts-btn\" class=\"mt-4 bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-800 transition\">Write your thoughts</button>\n      </div>\n    `;\n        // Add event listener for the new button\n        document.getElementById(\"write-thoughts-btn\").onclick = function() {\n            // Save movie info to localStorage\n            localStorage.setItem(\"selectedMovie\", JSON.stringify(randomMovie));\n            // Redirect to journal.html\n            window.location.href = \"journal.html\";\n        };\n    } catch (error) {\n        document.getElementById(\"film-result\").innerHTML = \"Error fetching movies.\";\n    }\n};\n\n//# sourceMappingURL=TMDB-PROJECT-REFACTORED.b0be5a7e.js.map\n","const apiKey = \"fcb5f9f40d9acdf7af2d8c38ded9bb12\";\nconst apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`;\nconst imageBaseUrl = \"https://image.tmdb.org/t/p/w500\";\nconst LS_KEY = \"favorites\"; // کلید ذخیره‌سازی\n\nfunction loadFavorites() {\n  try {\n    return JSON.parse(localStorage.getItem(LS_KEY)) || [];\n  } catch {\n    return [];\n  }\n}\nfunction saveFavorites(favs) {\n  localStorage.setItem(LS_KEY, JSON.stringify(favs));\n}\nfunction isFav(id) {\n  const favs = loadFavorites();\n  return favs.some((m) => m.id === id);\n}\nfunction toggleFav(movie) {\n  const favs = loadFavorites();\n  const idx = favs.findIndex((m) => m.id === movie.id);\n  if (idx >= 0) favs.splice(idx, 1);\n  else\n    favs.push({\n      id: movie.id,\n      title: movie.title,\n      poster_path: movie.poster_path,\n      vote_average: movie.vote_average,\n      release_date: movie.release_date,\n    });\n  saveFavorites(favs);\n}\n\nasync function fetchMovies() {\n  try {\n    const res = await fetch(apiUrl);\n    const data = await res.json();\n    const movies = data.results;\n    displayMovies(data.results);\n    displayMovies(movies);\n    displayShows(movies);\n  } catch (error) {\n    console.error(\"Error fetching movies:\", error);\n  }\n}\n\nfunction displayMovies(movies) {\n  const container = document.getElementById(\"movie-container\");\n  container.innerHTML = \"\";\n\n  movies.forEach((movie) => {\n    const faved = isFav(movie.id);\n    const movieCard = document.createElement(\"div\");\n    movieCard.className =\n      \"bg-white/60 backdrop-blur rounded-lg overflow-hidden shadow-md hover:scale-105 transition transform duration-300 text-gray-900\";\n\n    movieCard.innerHTML = `\n      <div class=\"relative\">\n        <img src=\"${imageBaseUrl}${movie.poster_path}\" alt=\"${\n      movie.title\n    }\" class=\"w-full h-auto\">\n        <button\n          class=\"fav-btn absolute top-2 right-2 rounded-full p-2 bg-white/80 hover:bg-white shadow\"\n          aria-label=\"favorite\"\n          data-id=\"${movie.id}\">\n          ${\n            faved\n              ? `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6 fill-pink-500\" viewBox=\"0 0 24 24\"><path d=\"M12 21s-6.716-4.35-9.428-7.062C.86 12.226.5 10.37 1.05 8.85 1.72 7.01 3.41 5.75 5.39 5.75c1.5 0 2.86.79 3.61 2.02.75-1.23 2.11-2.02 3.61-2.02 1.98 0 3.67 1.26 4.34 3.1.55 1.52.19 3.38-1.52 5.09C18.716 16.65 12 21 12 21z\"/></svg>`\n              : `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6 stroke-pink-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path d=\"M20.84 4.61a5.5 5.5 0 00-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 10-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 000-7.78z\"/></svg>`\n          }\n        </button>\n      </div>\n      <div class=\"p-4\">\n        <h2 class=\"text-lg font-semibold\">${movie.title}</h2>\n        <p class=\"text-sm text-gray-600\">Rating: ${movie.vote_average}</p>\n      </div>\n    `;\n\n    movieCard.querySelector(\".fav-btn\").addEventListener(\"click\", (e) => {\n      e.stopPropagation();\n      toggleFav(movie);\n\n      const btn = e.currentTarget;\n      const nowFav = isFav(movie.id);\n      btn.innerHTML = nowFav\n        ? `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6 fill-pink-500\" viewBox=\"0 0 24 24\"><path d=\"M12 21s-6.716-4.35-9.428-7.062C.86 12.226.5 10.37 1.05 8.85 1.72 7.01 3.41 5.75 5.39 5.75c1.5 0 2.86.79 3.61 2.02.75-1.23 2.11-2.02 3.61-2.02 1.98 0 3.67 1.26 4.34 3.1.55 1.52.19 3.38-1.52 5.09C18.716 16.65 12 21 12 21z\"/></svg>`\n        : `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-6 h-6 stroke-pink-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\"><path d=\"M20.84 4.61a5.5 5.5 0 00-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 10-7.78 7.78L12 21.23l8.84-8.84a5.5 5.5 0 000-7.78z\"/></svg>`;\n    });\n\n    movieCard.addEventListener(\"click\", (e) => {\n      document.getElementById(\"popup\").classList.remove(\"hidden\");\n      e.preventDefault();\n      populatePopup(movie);\n    });\n\n    container.appendChild(movieCard);\n  });\n}\n\nfetchMovies();\n\n//DISPAY SHOWS FUNCTION\nfunction randomFilmArray(array) {\n  return array.sort(() => Math.random() - 0.5).slice(0, 4);\n}\n\nfunction displayShows(movies) {\n  movies = randomFilmArray(movies);\n  const showContainer = document.getElementById(\"liveshows\");\n  showContainer.innerHTML = \"\";\n\n  movies.forEach((movie) => {\n    const showCard = document.createElement(\"div\");\n\n    showCard.innerHTML = `\n        <a   href=\"\">\n              <img\n                class=\"w-full aspect-[16/24] bg-cover rounded-lg overflow-hidden mb-3  max-[910px]:w-[1000px] max-[910px]:bg-fit max-[910px]:h-[350px]\"\n                src=\"${imageBaseUrl}${movie.poster_path}\"\n                alt=\"${movie.title}\"\n              />\n              <a\n                href=\"#\"\n                class=\"text-[1.1rem] font-bold tracking-normal hover:text-blue-600 transition-colors\"\n              >\n                ${movie.title}\n              </a>\n              <p class=\"mt-2 text-[0.9rem]\">${movie.overview}</p>\n            </a>\n    `;\n    showCard.addEventListener(\"click\", (e) => {\n      document.getElementById(\"popup\").classList.remove(\"hidden\");\n      e.preventDefault();\n      populatePopup(movie);\n    });\n\n    showContainer.appendChild(showCard);\n  });\n}\n\nconst popup = document.getElementById(\"popup\");\nconst closeBtn = document.getElementById(\"popupCloseBtn\");\n\ncloseBtn.addEventListener(\"click\", () => {\n  popup.classList.add(\"hidden\");\n});\n\n//POP UP FUNCTION\n\nfunction populatePopup(movie) {\n  currentMovieId = movie.id;\n\n  const titlePopUp = document.querySelector(\".info-container h1\");\n  titlePopUp.textContent = movie.title;\n\n  const year = movie.release_date;\n  const infoFilm = document.querySelector(\"#popup .info-film\");\n  infoFilm.innerHTML = `\n    <p class=\"bg-orange-400 rounded-md px-2 py-1\">Release Year: ${year}</p>\n  `;\n\n  const ratingValue = movie.vote_average\n    ? movie.vote_average.toFixed(1)\n    : \"N/A\";\n  document.querySelector(\n    \"#popup .pop-container .flex.flex-col.items-center p.text-white span\"\n  ).textContent = ratingValue;\n\n  const popularity = movie.popularity ? Math.round(movie.popularity) : \"N/A\";\n  document.querySelector(\n    \"#popup .pop-container .flex.items-center.gap-2 p.text-gray-500 span\"\n  ).textContent = popularity;\n\n  const imageElem = document.querySelector(\".img-popup\");\n  imageElem.src = imageBaseUrl + movie.poster_path;\n  imageElem.alt = movie.title;\n\n  document.querySelector(\".description\").textContent = movie.overview;\n\n  popup.classList.remove(\"hidden\");\n\n  loadReviewsForMovie(currentMovieId);\n}\n\n// REVIEWS\n\nconst reviewForm = document.getElementById(\"reviewForm\");\nconst reviewTextarea = document.getElementById(\"reviewTexareat\");\nconst reviewContainer = document.getElementById(\"reviewContainer\");\n\nlet currentMovieId = null;\n\nfunction getStorageKey(movieId) {\n  return `reviews_${movieId}`;\n}\n\nfunction loadReviewsForMovie(movieId) {\n  const reviews =\n    JSON.parse(localStorage.getItem(getStorageKey(movieId))) || [];\n  reviewContainer.innerHTML = \"\";\n\n  reviews.forEach((review, index) => {\n    const reviewDiv = document.createElement(\"div\");\n    reviewDiv.className =\n      \"bg-gray-100 p-3 mb-2 rounded-md flex justify-between items-center\";\n\n    reviewDiv.innerHTML = `\n      <span class=\"text-gray-700\">${review}</span>\n      <button class=\"text-red-500 hover:text-red-700\" data-index=\"${index}\">❌</button>\n    `;\n\n    reviewDiv.querySelector(\"button\").addEventListener(\"click\", () => {\n      deleteReviewForMovie(movieId, index);\n    });\n\n    reviewContainer.appendChild(reviewDiv);\n  });\n}\n\nreviewForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  const text = reviewTextarea.value.trim();\n\n  if (text && currentMovieId) {\n    const key = getStorageKey(currentMovieId);\n    const reviews = JSON.parse(localStorage.getItem(key)) || [];\n    reviews.push(text);\n    localStorage.setItem(key, JSON.stringify(reviews));\n\n    reviewTextarea.value = \"\";\n    loadReviewsForMovie(currentMovieId);\n  } else {\n    alert(\"Scrivi qualcosa prima di salvare!\");\n  }\n});\n\nfunction deleteReviewForMovie(movieId, index) {\n  const key = getStorageKey(movieId);\n  const reviews = JSON.parse(localStorage.getItem(key)) || [];\n  reviews.splice(index, 1);\n  localStorage.setItem(key, JSON.stringify(reviews));\n  loadReviewsForMovie(movieId);\n}\n// the following part from hua: This function is triggered when the \"Random Film\" button is clicked\ndocument.getElementById(\"random-film-btn\").onclick = async function () {\n  const apiKey = \"fcb5f9f40d9acdf7af2d8c38ded9bb12\"; // <-- Replace with your TMDB API key\n  const url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const movies = data.results;\n    if (!movies || movies.length === 0) {\n      document.getElementById(\"film-result\").innerHTML = \"No movies found.\";\n      return;\n    }\n    const randomMovie = movies[Math.floor(Math.random() * movies.length)];\n    document.getElementById(\"film-result\").innerHTML = `\n      <div class=\"flex flex-col items-center\">\n        <img src=\"https://image.tmdb.org/t/p/w300${randomMovie.poster_path}\" alt=\"${randomMovie.title}\" class=\"mb-4 rounded shadow-lg\" />\n        <h2 class=\"text-2xl font-bold mb-2\">${randomMovie.title}</h2>\n        <p class=\"text-gray-700 mb-2\">${randomMovie.release_date}</p>\n        <p class=\"text-gray-600 max-w-md\">${randomMovie.overview}</p>\n        <button id=\"write-thoughts-btn\" class=\"mt-4 bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-800 transition\">Write your thoughts</button>\n      </div>\n    `;\n\n    // Add event listener for the new button\n    document.getElementById(\"write-thoughts-btn\").onclick = function () {\n      // Save movie info to localStorage\n      localStorage.setItem(\"selectedMovie\", JSON.stringify(randomMovie));\n      // Redirect to journal.html\n      window.location.href = \"journal.html\";\n    };\n  } catch (error) {\n    document.getElementById(\"film-result\").innerHTML = \"Error fetching movies.\";\n  }\n};\n"],"names":["apiKey","apiUrl","imageBaseUrl","LS_KEY","loadFavorites","JSON","parse","localStorage","getItem","saveFavorites","favs","setItem","stringify","isFav","id","some","m","toggleFav","movie","idx","findIndex","splice","push","title","poster_path","vote_average","release_date","fetchMovies","res","fetch","data","json","movies","results","displayMovies","displayShows","error","console","container","document","getElementById","innerHTML","forEach","faved","movieCard","createElement","className","querySelector","addEventListener","e","stopPropagation","btn","currentTarget","nowFav","classList","remove","preventDefault","populatePopup","appendChild","randomFilmArray","array","sort","Math","random","slice","showContainer","showCard","overview","popup","closeBtn","currentMovieId","titlePopUp","textContent","year","infoFilm","ratingValue","toFixed","popularity","round","imageElem","src","alt","loadReviewsForMovie","add","reviewForm","reviewTextarea","reviewContainer","getStorageKey","movieId","reviews","review","index","reviewDiv","deleteReviewForMovie","key","text","value","trim","alert","onclick","response","length","randomMovie","floor","window","location","href"],"version":3,"file":"TMDB-PROJECT-REFACTORED.b0be5a7e.js.map"}