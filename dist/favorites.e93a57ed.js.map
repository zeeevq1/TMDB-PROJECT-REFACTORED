{"mappings":"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","sources":["src/favorites.js"],"sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * favorites.js — Favorites page (plain JS)\r\n *\r\n * Includes the \"course pattern\":\r\n *   - fetchMovies(apiUrl) with try/catch\r\n *   - displayShows([]) on empty/error → shows an empty-state with an image\r\n *\r\n * Covers:\r\n * - FR010: small, purpose-specific functions\r\n * - FR006: English comments + JSDoc\r\n * - FR008: graceful empty state (image + message)\r\n * - FR009: robust error handling (toasts + non-crashing UI)\r\n * - FR007: fixes (bad JSON, duplicates, safe poster URL, non-skinny grid)\r\n */\r\n\r\n///////////////////////////\r\n// Config & API settings //\r\n///////////////////////////\r\n\r\n/** Public image base for TMDB posters */\r\nconst IMAGE_BASE = \"https://image.tmdb.org/t/p/w500\";\r\n/** LocalStorage key: favorites (array of IDs or movie objects) */\r\nconst LS_KEY = \"favorites\";\r\n\r\n/** Optional TMDB credentials (read from window to avoid build-time config) */\r\nconst API = {\r\n  key: typeof window !== \"undefined\" ? window.__TMDB_KEY__ || \"\" : \"\",\r\n  bearer: typeof window !== \"undefined\" ? window.__TMDB_BEARER__ || \"\" : \"\",\r\n  baseUrl: \"https://api.themoviedb.org/3\",\r\n  language: \"en-US\",\r\n};\r\n\r\n/** Network defaults for TMDB calls */\r\nconst NET = { timeout: 12000 };\r\n\r\n////////////////////\r\n// UI: toast/state\r\n////////////////////\r\n\r\n/** Lightweight toast (user-visible short messages) */\r\nfunction toast(msg, ms = 3200) {\r\n  let host = document.getElementById(\"app-toast\");\r\n  if (!host) {\r\n    host = document.createElement(\"div\");\r\n    host.id = \"app-toast\";\r\n    host.setAttribute(\"aria-live\", \"polite\");\r\n    host.className = \"fixed bottom-4 left-1/2 -translate-x-1/2 z-[9999]\";\r\n    document.body.appendChild(host);\r\n  }\r\n  const el = document.createElement(\"div\");\r\n  el.className =\r\n    \"mb-2 rounded-xl bg-black/80 text-white px-4 py-2 shadow text-sm whitespace-pre-wrap\";\r\n  el.textContent = String(msg || \"\");\r\n  host.appendChild(el);\r\n  setTimeout(() => el.remove(), ms);\r\n}\r\n\r\n/** Escape helper for safe innerHTML text nodes */\r\nfunction escapeHtml(s) {\r\n  return String(s).replace(\r\n    /[&<>\"']/g,\r\n    (m) =>\r\n      ({\r\n        \"&\": \"&amp;\",\r\n        \"<\": \"&lt;\",\r\n        \">\": \"&gt;\",\r\n        '\"': \"&quot;\",\r\n        \"'\": \"&#39;\",\r\n      }[m])\r\n  );\r\n}\r\n\r\n/** DOM helper: get favorites container */\r\nfunction getShowContainer() {\r\n  return /** @type {HTMLElement} */ (document.getElementById(\"fav-container\"));\r\n}\r\n\r\n//////////////////////////\r\n// Storage + data shape //\r\n//////////////////////////\r\n\r\n/**\r\n * @typedef {{ id:number, title?:string, name?:string, poster_path?:string, profile_path?:string, vote_average?:number }} MovieLite\r\n */\r\n\r\n/**\r\n * Read favorites safely from localStorage.\r\n * Accepts arrays of numbers (IDs) or arrays of movie-like objects.\r\n * Removes duplicates.\r\n * @returns {(number|MovieLite)[]}\r\n */\r\nfunction readFavoritesRaw() {\r\n  try {\r\n    const raw = localStorage.getItem(LS_KEY);\r\n    const val = raw ? JSON.parse(raw) : [];\r\n    if (!Array.isArray(val)) return [];\r\n    // de-duplicate by JSON string\r\n    const uniq = Array.from(new Set(val.map((x) => JSON.stringify(x)))).map(\r\n      (s) => JSON.parse(s)\r\n    );\r\n    return uniq;\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Normalize favorites into a consistent shape (MovieLite[]).\r\n * @param {(number|MovieLite)[]} raw\r\n * @returns {MovieLite[]}\r\n */\r\nfunction normalize(raw) {\r\n  /** @type {MovieLite[]} */\r\n  const out = [];\r\n  for (const it of raw) {\r\n    if (typeof it === \"number\") {\r\n      out.push({ id: Number(it) });\r\n    } else if (it && typeof it === \"object\") {\r\n      const id = Number(it.id);\r\n      if (Number.isFinite(id)) {\r\n        out.push({\r\n          id,\r\n          title: it.title || it.name || \"\",\r\n          poster_path: it.poster_path || it.profile_path || \"\",\r\n          vote_average:\r\n            typeof it.vote_average === \"number\" ? it.vote_average : undefined,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return out;\r\n}\r\n\r\n/** Remove one favorite by id and persist + toast */\r\nfunction removeFavorite(id) {\r\n  const current = readFavoritesRaw();\r\n  const next = current.filter((x) =>\r\n    typeof x === \"number\" ? Number(x) !== id : Number(x?.id) !== id\r\n  );\r\n  localStorage.setItem(LS_KEY, JSON.stringify(next));\r\n  toast(\"Removed from favorites\");\r\n}\r\n\r\n/** Build a safe poster URL from various shapes */\r\nfunction safePosterUrl(p) {\r\n  if (!p) return \"\";\r\n  if (/^https?:\\/\\//i.test(p)) return p;\r\n  return p.startsWith(\"/\") ? IMAGE_BASE + p : IMAGE_BASE + \"/\" + p;\r\n}\r\n\r\n/////////////////////////\r\n// TMDB: robust helper //\r\n/////////////////////////\r\n\r\n/** Build TMDB URL with api_key when no Bearer is present. */\r\nfunction tmdbUrl(path, params = {}) {\r\n  const url = new URL(path, API.baseUrl);\r\n  if (!API.bearer && API.key) url.searchParams.set(\"api_key\", API.key);\r\n  for (const [k, v] of Object.entries(params)) {\r\n    if (v != null) url.searchParams.set(k, String(v));\r\n  }\r\n  return url.toString();\r\n}\r\n\r\n/**\r\n * GET wrapper for TMDB with friendly error codes.\r\n * throws e.code in: AUTH, RATE, TIMEOUT, DOWN\r\n */\r\nasync function tmdbGet(path, params = {}) {\r\n  const ctrl = new AbortController();\r\n  const id = setTimeout(() => ctrl.abort(), NET.timeout);\r\n  try {\r\n    const headers = { \"Content-Type\": \"application/json\" };\r\n    if (API.bearer) headers[\"Authorization\"] = `Bearer ${API.bearer}`;\r\n    const res = await fetch(tmdbUrl(path, params), {\r\n      headers,\r\n      signal: ctrl.signal,\r\n    });\r\n    if (!res.ok) {\r\n      const err = new Error(`HTTP ${res.status}`);\r\n      // @ts-ignore\r\n      err.status = res.status;\r\n      throw err;\r\n    }\r\n    return await res.json();\r\n  } catch (e) {\r\n    if (e?.name === \"AbortError\") {\r\n      const err = new Error(\"Timeout\");\r\n      err.code = \"TIMEOUT\";\r\n      throw err;\r\n    }\r\n    if (e?.status === 401 || e?.status === 403) {\r\n      const err = new Error(\"Auth\");\r\n      err.code = \"AUTH\";\r\n      throw err;\r\n    }\r\n    if (e?.status === 429) {\r\n      const err = new Error(\"Rate\");\r\n      err.code = \"RATE\";\r\n      throw err;\r\n    }\r\n    if (typeof e?.status === \"number\" && e.status >= 500) {\r\n      const err = new Error(\"Down\");\r\n      err.code = \"DOWN\";\r\n      throw err;\r\n    }\r\n    throw e;\r\n  } finally {\r\n    clearTimeout(id);\r\n  }\r\n}\r\n\r\n//////////////////////\r\n// Course-style API //\r\n//////////////////////\r\n\r\n/**\r\n * COURSE PATTERN — generic fetch with empty/error flow.\r\n * You can use this anywhere (e.g., for search/trending), not mandatory for favorites.\r\n * @param {string} apiUrl\r\n */\r\nasync function fetchMovies(apiUrl) {\r\n  try {\r\n    const res = await fetch(apiUrl);\r\n    const data = await res.json();\r\n    const movies = data?.results || [];\r\n\r\n    // If we don't have any films, we display an empty state\r\n    if (!movies || movies.length === 0) {\r\n      displayShows([]); // \"No movies found\"\r\n      return;\r\n    }\r\n\r\n    displayMovies(movies);\r\n    displayShows(movies);\r\n  } catch (error) {\r\n    console.error(\"Error fetching movies:\", error);\r\n    displayShows([]); // show empty/error block\r\n  }\r\n}\r\n\r\n/////////////////////\r\n// Render helpers  //\r\n/////////////////////\r\n\r\n/**\r\n * Create a movie card (2:3 poster ratio, minimal + accessible)\r\n * @param {MovieLite} m\r\n * @returns {HTMLElement}\r\n */\r\nfunction createCard(m) {\r\n  const card = document.createElement(\"div\");\r\n  card.className =\r\n    \"bg-white/60 backdrop-blur rounded-lg overflow-hidden shadow-md group\";\r\n\r\n  // Wrapper to position Remove button\r\n  const wrapper = document.createElement(\"div\");\r\n  wrapper.className = \"relative\";\r\n\r\n  // Poster image (CSS class .poster controls ratio in HTML header)\r\n  const img = document.createElement(\"img\");\r\n  img.className = \"poster\";\r\n  img.alt = m.title || \"Untitled\";\r\n  img.src = m.poster_path ? safePosterUrl(m.poster_path) : \"\";\r\n  img.onerror = () => {\r\n    img.onerror = null;\r\n    img.src =\r\n      \"data:image/svg+xml;charset=utf-8,\" +\r\n      encodeURIComponent(\r\n        `<svg xmlns='http://www.w3.org/2000/svg' width='500' height='750'>\r\n           <rect width='100%' height='100%' fill='#e5e7eb'/>\r\n           <text x='50%' y='50%' dominant-baseline='middle' text-anchor='middle'\r\n                 fill='#9ca3af' font-family='sans-serif' font-size='20'>No Image</text>\r\n         </svg>`\r\n      );\r\n  };\r\n\r\n  // Remove button (shows on hover)\r\n  const removeBtn = document.createElement(\"button\");\r\n  removeBtn.type = \"button\";\r\n  removeBtn.className =\r\n    \"absolute top-2 right-2 rounded-full bg-black/70 text-white px-2 py-1 text-xs opacity-0 group-hover:opacity-100 transition\";\r\n  removeBtn.textContent = \"Remove\";\r\n  removeBtn.addEventListener(\"click\", () => {\r\n    removeFavorite(m.id);\r\n    card.remove();\r\n    const host = getShowContainer();\r\n    if (host && host.querySelectorAll(\"div.bg-white\\\\/60\").length === 0) {\r\n      displayShows([]); // fall back to empty state block\r\n    }\r\n  });\r\n\r\n  // Body\r\n  const body = document.createElement(\"div\");\r\n  body.className = \"p-4\";\r\n  const title = document.createElement(\"h2\");\r\n  title.className = \"text-lg font-semibold text-gray-900\";\r\n  title.textContent = m.title || \"Untitled\";\r\n  const rating = document.createElement(\"p\");\r\n  rating.className = \"text-sm text-gray-600\";\r\n  rating.textContent = `Rating: ${m.vote_average ?? \"-\"}`;\r\n\r\n  // Compose\r\n  wrapper.appendChild(img);\r\n  wrapper.appendChild(removeBtn);\r\n  card.appendChild(wrapper);\r\n  body.appendChild(title);\r\n  body.appendChild(rating);\r\n  card.appendChild(body);\r\n  return card;\r\n}\r\n\r\n/**\r\n * Render grid of cards into the host element (flexible columns).\r\n * @param {HTMLElement} host\r\n * @param {MovieLite[]} items\r\n */\r\nfunction renderGrid(host, items) {\r\n  host.innerHTML = \"\";\r\n  host.classList.add(\"grid\", \"gap-6\", \"pb-10\");\r\n  host.style.gridTemplateColumns = \"repeat(auto-fill, minmax(200px, 1fr))\";\r\n\r\n  const frag = document.createDocumentFragment();\r\n  for (const it of items) frag.appendChild(createCard(it));\r\n  host.appendChild(frag);\r\n}\r\n\r\n/**\r\n * COURSE PATTERN — displayMovies: render list when we have content.\r\n * @param {MovieLite[]} movies\r\n */\r\nfunction displayMovies(movies) {\r\n  const showContainer = getShowContainer();\r\n  if (!showContainer) return;\r\n  renderGrid(showContainer, movies);\r\n}\r\n\r\n/**\r\n * COURSE PATTERN — displayShows:\r\n * - empty/error → show image + message\r\n * - otherwise → delegate to displayMovies\r\n * @param {MovieLite[]} movies\r\n */\r\nfunction displayShows(movies) {\r\n  const showContainer = getShowContainer();\r\n  if (!showContainer) return;\r\n\r\n  if (!movies || movies.length === 0) {\r\n    showContainer.classList.remove(\"grid\");\r\n    showContainer.innerHTML = `\r\n      <div class=\"flex flex-col p-6 items-center justify-center text-gray-500 mt-6\">\r\n        <img\r\n          src=\"../img/scared.jpg\"\r\n          alt=\"No movies\"\r\n          class=\"w-[70rem] h-[30rem] object-scale-down rounded-lg mb-4\r\n                 max-[910px]:w-[1000px] max-[910px]:h-[350px] max-[910px]:object-cover max-[910px]:object-center\"\r\n        />\r\n        <p class=\"text-2xl font-semibold\">Oops! No movies found</p>\r\n        <p class=\"text-md text-gray-600 mt-2\">Please try again later, the API might be offline..</p>\r\n      </div>\r\n    `;\r\n    return;\r\n  }\r\n\r\n  // If we DO have movies, render normally\r\n  displayMovies(movies);\r\n}\r\n\r\n//////////////////////\r\n// Orchestration    //\r\n//////////////////////\r\n\r\n/**\r\n * Load favorites from storage, optionally enrich from TMDB if we only have IDs,\r\n * then show via course-style display functions.\r\n */\r\nasync function loadAndRenderFavorites() {\r\n  const host = getShowContainer();\r\n  if (!host) return;\r\n\r\n  // Read + normalize\r\n  const raw = readFavoritesRaw();\r\n  const items = normalize(raw);\r\n\r\n  // Nothing saved? show empty block\r\n  if (items.length === 0) {\r\n    displayShows([]); // empty\r\n    return;\r\n  }\r\n\r\n  // If some items are IDs only, enrich with TMDB (robust error handling)\r\n  try {\r\n    const needs = items.some((m) => !m.title);\r\n    if (needs) {\r\n      const notified = { AUTH: false, RATE: false, DOWN: false };\r\n      await Promise.allSettled(\r\n        items\r\n          .filter((m) => !m.title && Number.isFinite(m.id))\r\n          .map(async (m) => {\r\n            try {\r\n              const data = await tmdbGet(`/movie/${m.id}`, {\r\n                language: API.language,\r\n              });\r\n              m.title = data.title || m.title || \"\";\r\n              m.poster_path = data.poster_path || m.poster_path || \"\";\r\n              if (typeof data.vote_average === \"number\")\r\n                m.vote_average = data.vote_average;\r\n            } catch (e) {\r\n              if (e?.code === \"AUTH\" && !notified.AUTH) {\r\n                toast(\r\n                  \"TMDB credentials invalid/missing. Showing saved items only.\"\r\n                );\r\n                notified.AUTH = true;\r\n              } else if (e?.code === \"RATE\" && !notified.RATE) {\r\n                toast(\"TMDB rate limit reached. Try again in a minute.\");\r\n                notified.RATE = true;\r\n              } else if (e?.code === \"DOWN\" && !notified.DOWN) {\r\n                toast(\"TMDB seems down. Showing saved items only.\");\r\n                notified.DOWN = true;\r\n              } else if (e?.code === \"TIMEOUT\") {\r\n                toast(\"Network timeout while contacting TMDB.\");\r\n              }\r\n              console.warn(\"Enrich failed for id\", m.id, e);\r\n            }\r\n          })\r\n      );\r\n    }\r\n  } catch (e) {\r\n    // Any unexpected error during enrichment → fallback to empty/info block\r\n    console.error(\"Favorites enrich error:\", e);\r\n    toast(\"Error loading favorites.\");\r\n  }\r\n\r\n  // Finally, show using the course-style function\r\n  displayShows(items);\r\n}\r\n\r\n// Boot\r\ndocument.addEventListener(\"DOMContentLoaded\", loadAndRenderFavorites);\r\n"],"names":[],"version":3,"file":"favorites.e93a57ed.js.map","sourceRoot":"/__parcel_source_root/"}